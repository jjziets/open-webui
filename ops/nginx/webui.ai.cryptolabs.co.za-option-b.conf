# Nginx reverse proxy for Open WebUI with Option B - Trusted Header SSO
# Host: webui.ai.cryptolabs.co.za
# Upstream: Open WebUI container
# Auth: WordPress SSO endpoint via auth_request

map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}

upstream open_webui_upstream {
  server OPENWEBUI_CONTAINER_IP:8080;
  keepalive 32;
}

server {
  listen 80;
  listen [::]:80;
  server_name webui.ai.cryptolabs.co.za;
  return 301 https://$host$request_uri;
}

server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  server_name webui.ai.cryptolabs.co.za;

  # SSL managed by certbot
  ssl_certificate     /etc/letsencrypt/live/webui.ai.cryptolabs.co.za/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/webui.ai.cryptolabs.co.za/privkey.pem;

  client_max_body_size 100m;

  # Health check
  location = /health {
    access_log off;
    add_header Content-Type text/plain;
    return 200 'ok';
  }

  # Internal location for WordPress SSO authentication
  location = /__wp_auth_check {
    internal;
    proxy_pass https://cryptolabs.co.za/wp-json/cryptolabs/v1/webui/auth;
    proxy_pass_request_body off;
    proxy_set_header Content-Length "";
    proxy_set_header Host cryptolabs.co.za;
    proxy_set_header Cookie $http_cookie;
    proxy_set_header X-Original-URI $request_uri;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # Store response headers for use in main location
    auth_request_set $auth_email $upstream_http_x_webui_email;
    auth_request_set $auth_name $upstream_http_x_webui_name;
    auth_request_set $auth_api_key $upstream_http_x_user_api_key;
    auth_request_set $auth_litellm_url $upstream_http_x_user_litellm_url;
  }

  # WebSocket (Socket.IO) endpoint - no auth_request here
  location /ws/socket.io {
    proxy_pass http://open_webui_upstream;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_read_timeout 3600s;
    proxy_send_timeout 3600s;
  }

  # Main location with auth_request
  location / {
    # Authenticate via WordPress
    auth_request /__wp_auth_check;
    
    # On authentication failure, redirect to WordPress login
    error_page 401 = @auth_failed;
    
    # Forward authentication headers to Open WebUI
    proxy_set_header X-Webui-Email $auth_email;
    proxy_set_header X-Webui-Name $auth_name;
    proxy_set_header X-User-Api-Key $auth_api_key;
    proxy_set_header X-User-Litellm-Url $auth_litellm_url;
    
    # Standard proxy headers
    proxy_pass http://open_webui_upstream;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Port $server_port;
    proxy_read_timeout 3600s;
    proxy_send_timeout 3600s;
  }

  # Authentication failure handler
  location @auth_failed {
    return 302 https://www.cryptolabs.co.za/wp-login.php?redirect_to=https://www.cryptolabs.co.za/ai-chat/;
  }

  # Exclude certain paths from auth_request if needed
  location ~ ^/(api/health|health) {
    proxy_pass http://open_webui_upstream;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }
}
